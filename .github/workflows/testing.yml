name: Web-Driver IO 

on:
  push:
    branches:
      - testing

jobs:
  salesforce_tests:
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Set Execute Permission for wdio Binary
        run: chmod +x ./node_modules/.bin/wdio

      - name: Run Salesforce login test in Chrome
        env:
          BROWSER: chrome
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
        run: npm run githubActionsLogin

      - name: Collect Allure Results after Chrome Login Test
        if: always()
        run: ls -la ./allure-results

      - name: Run Salesforce create account test in Chrome
        env:
          BROWSER: chrome
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
        run: npm run githubActionsAccount

      - name: Collect Allure Results after Chrome Create Account Test
        if: always()
        run: ls -la ./allure-results

      - name: Run Salesforce login test in Edge
        env:
          BROWSER: MicrosoftEdge
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
        run: npm run githubActionsLogin

      - name: Collect Allure Results after Edge Login Test
        if: always()
        run: ls -la ./allure-results

      - name: Run Salesforce create account test in Edge
        env:
          BROWSER: MicrosoftEdge
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
        run: npm run githubActionsAccount

      - name: Collect Allure Results after Edge Create Account Test
        if: always()
        run: ls -la ./allure-results

      - name: Upload Allure Results for Debugging
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: ./allure-results

  generate_allure_report:
    runs-on: ubuntu-latest
    needs: salesforce_tests
    if: always() # This ensures the job runs whether the previous job passed or failed.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Download Allure Results
        uses: actions/download-artifact@v3
        with:
          name: allure-results

      - name: Install dependencies
        run: npm install

      - name: Generate Allure Report
        run: |
          npm install -g allure-commandline
          allure generate ./allure-results/ -o ./allure-report/ --clean

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: ./allure-report






# name: Web-Driver IO 

# on:
#  push:
#   branches:
#   - testing

# jobs:
 
#  Salesforce-tests:
#    runs-on: ubuntu-latest
#    environment: testing

#    steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
      
#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 20

#     - name: Create results directory
#       run: mkdir -p reporting

#     - name: Install dependencies
#       run: npm install

#     - name: Set Execute Permission for wdio Binary
#       run: chmod +x ./node_modules/.bin/wdio
    
#     - name: Run Salesforce login test!
#       env:
#         SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
#         SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
#       run: |
#         npm run githubActionsLogin

#     - name: Run Salesforce creating an account test!
#       env:
#         SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
#         SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
#       run:
#         npm run githubActionsAccount
    

#     - name: Generate Allure Report
#       run: |
#         npm install -g allure-commandline  # install allure command line tool
#         allure generate ./reporting/ -o ./reporting/ --clean

#     - name: Upload Allure Report
#       uses: actions/upload-artifact@v3
#       with:
#         name: allure-report
#         path: ./reporting

    # This step deploys the Allure report to the gh-pages branch
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./reporting/allure-report
    #     publish_branch: gh-pages  # This is the branch the action will push to, set up for GitHub Pages
    #     keep_files: true  # Optional: this keeps files that are not overwritten in the deployment
  
    # - name: Upload video
    #   if: always()
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: Salesforce-tests
    #     path: ./reporting

#  Obtaining-Salesforce-results-video:
#     runs-on: ubuntu-latest
#     needs: Salesforce-tests

#     steps:
#       - name: Download video
#         uses: actions/download-artifact@v3
#         with:
#           name: Salesforce-tests
          
#       - name: Display structure of downloaded files
#         run: ls -R



name: Web-Driver IO 

on:
 push:
  branches:
  - testing

jobs:
 
 Salesforce-tests:
   runs-on: ubuntu-latest
   environment: testing

   steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Create results directory
      run: mkdir -p reporting

    - name: Install dependencies
      run: npm install

    - name: Set Execute Permission for wdio Binary
      run: chmod +x ./node_modules/.bin/wdio
    
    - name: Run Salesforce login test!
      env:
        SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
        SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
      run: |
        npm run githubActionsLogin

    - name: Run Salesforce creating an account test!
      env:
        SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
        SALESFORCE_PASSWORD: ${{ secrets.SALESFORCE_PASSWORD }}
      run:
        npm run githubActionsAccount
    

    - name: Generate Allure Report
      run: |
        npm install -g allure-commandline  # install allure command line tool
        allure generate ./reporting/ -o ./reporting/ --clean

    - name: Upload Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: ./reporting

    # This step deploys the Allure report to the gh-pages branch
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./reporting/allure-report
    #     publish_branch: gh-pages  # This is the branch the action will push to, set up for GitHub Pages
    #     keep_files: true  # Optional: this keeps files that are not overwritten in the deployment
  
    # - name: Upload video
    #   if: always()
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: Salesforce-tests
    #     path: ./reporting

#  Obtaining-Salesforce-results-video:
#     runs-on: ubuntu-latest
#     needs: Salesforce-tests

#     steps:
#       - name: Download video
#         uses: actions/download-artifact@v3
#         with:
#           name: Salesforce-tests
          
#       - name: Display structure of downloaded files
#         run: ls -R

